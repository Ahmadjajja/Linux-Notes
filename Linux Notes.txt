								---LINUX---



1) primary Objective

	a) Convenience(Windows and Macos)
	b) Throughput(Linux)
		~uses for executing number of tasks per unit time
		~Linux is faster than windows(Opening More than 1 tabs in browser)

2) Major Functionalities

	a) Resource Management

	~Resource management works when multiple users connected from a single machine like server.
	~Especially it use where parallel users connected from a machine.

	b) Process Management

	~If we have multiple applications/process running at a time like media player, browser, gaming app,
	OS manages it using CPU SCHEDULING

	c) Storage Management(Hard drive)
	
	~Store data in drive using file system.

	d) Memory Management(RAM)

	~All process first come in  RAM before execution.
	~RAM allocate memory and send it to CPU.
	~CPU executes the program/application

	e)Security Management
	
	~Operating System refers to specified steps or measures used to protect the OS from threats, viruses, 
	worms, malware or remote hacker intrusions.
	~Check the authentication.

3) why linux is better than WINDOWS for SERVERS?

	1)Free and Open Source 
 	
	~Linux is free and open source; we can see the source code used to create Linux(kernal).
	
	2)Stability and Reliability
	
	~Linux is Unix-based and Unix was origionally designed to provide an environment that's powerful, stable and reliable yet easy to use.
	Linux systems are widely known for their stability and reliability , many Linux servers on the internet have been running for years 
	without failure or even being restarted.

	3)Security 

	~Linux is without doubt the most secure kernal out there, making linux based operating systems secure and suitable for servers.
	
	4) Flexibility

	~Linux is so powerful and flexible. You can tune it to meet you server needs: it allows you to do whatever you want (if possible).
	You can install a GUI or simply operate your server via a terminal only.
	~ we  can make our own OS using linux kernal according to our requirements.
	
	5) Cost and maintenance
	~ Finally, the total cost of owning and maintaining a LINUX server is lower compared to windows server, in terms of licensing fess,
	software/hardware purchase and maintenance costs, system support services and administrative costs.

4) What is Kernal?
	~Kernal is core component of every operating system.We access our hardware through Kernal.Kernal works like bridge between hardware
	and our application.

5) Kernal and User Space
	~system memory or main divids in two parts:
	a)Kernal space
	b)User Space
		~space where processes of our application are running i.e processes like gaming application , media player etc.

example:-
	~For example when we are making an application, then the code of that application is in User Space. For application running,
	we needs kernal mode/kernal space to access hardware for running that application.
Note:-
	~we access Kernal space in User Space by user through System calls.
	For example, User gives System Calls that we need this hardware. These System calls are available in C-Language.
	Standard library uses in linux for that calls is call GNU-C-LIBRARY.
GNU-C-LIBRARY:-
	~This library contains multiple functions like print(), write() and many more permission methods like chMode(),pseudoCommand() etc.
	Through all these functions , we accesses Kernal Space from UserSpace.

6)File System
	~Linux organizes files using a hierarchical system.
	~Files are stored in directories and these directories can also contain other directories.
	~When you compare the Linux file-system to windows, you will find that there are no drive letters in Linux.

Commands part 1:
/ -> Root command of linux.
ls -> This command means that to see all content of this directory( / ).
cd home/ -> change directory from current directory to home directory.
~ -> tilde sign means that comes to the home page of this user.
clear -> will clear terminal screen.
cd .. -> Uses for to moving 1 step back

Note:-
	~we can't go to that directory that is not nested of this current directory.

mkdir directoryName -> make directory/folder command means that this will create new directory/folder in this current directory/folder.
touch app.txt -> This will create app.txt file in this current directoy.
vi app.txt -> this command will Add or Edit this file
	~insert mode -> insert mode turn on using i command.
	~pressing esc button -> we press this button to move out from insert mode.
	~pressing shift + colon -> we press this to save our file
	~w for write and then q for quit -> press w for write and then q for quit to quit from editor mode.
cat app.txt-> this command print the all content in current file app.txt

note:- 
terminal support this vi editor to ADD or EDITS files.
After getting into editor we should need to switch to different modes like insert mode using i command.

Commands part 2:




