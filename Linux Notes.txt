								---LINUX---



1) primary Objective

	a) Convenience(Windows and Macos)
	b) Throughput(Linux)
		~uses for executing number of tasks per unit time
		~Linux is faster than windows(Opening More than 1 tabs in browser)

2) Major Functionalities

	a) Resource Management

	~Resource management works when multiple users connected from a single machine like server.
	~Especially it use where parallel users connected from a machine.

	b) Process Management

	~If we have multiple applications/process running at a time like media player, browser, gaming app,
	OS manages it using CPU SCHEDULING

	c) Storage Management(Hard drive)
	
	~Store data in drive using file system.

	d) Memory Management(RAM)

	~All process first come in  RAM before execution.
	~RAM allocate memory and send it to CPU.
	~CPU executes the program/application

	e)Security Management
	
	~Operating System refers to specified steps or measures used to protect the OS from threats, viruses, 
	worms, malware or remote hacker intrusions.
	~Check the authentication.

3) why linux is better than WINDOWS for SERVERS?

	1)Free and Open Source 
 	
	~Linux is free and open source; we can see the source code used to create Linux(kernal).
	
	2)Stability and Reliability
	
	~Linux is Unix-based and Unix was origionally designed to provide an environment that's powerful, stable and reliable yet easy to use.
	Linux systems are widely known for their stability and reliability , many Linux servers on the internet have been running for years 
	without failure or even being restarted.

	3)Security 

	~Linux is without doubt the most secure kernal out there, making linux based operating systems secure and suitable for servers.
	
	4) Flexibility

	~Linux is so powerful and flexible. You can tune it to meet you server needs: it allows you to do whatever you want (if possible).
	You can install a GUI or simply operate your server via a terminal only.
	~ we  can make our own OS using linux kernal according to our requirements.
	
	5) Cost and maintenance
	~ Finally, the total cost of owning and maintaining a LINUX server is lower compared to windows server, in terms of licensing fess,
	software/hardware purchase and maintenance costs, system support services and administrative costs.

4) What is Kernal?
	~Kernal is core component of every operating system.We access our hardware through Kernal.Kernal works like bridge between hardware
	and our application.
	~Directly talk with Kernal.

5) Kernal and User Space
	~system memory or main divids in two parts:
	a)Kernal space
	b)User Space
		~space where processes of our application are running i.e processes like gaming application , media player or any other application etc.

example:-
	~For example when we are making an application, then the code of that application is in User Space. For application running,
	we needs kernal mode/kernal space to access hardware for running that application.
Note:-
	~we access Kernal space in User Space by user through System calls(C programming language functions).
	For example, User gives System Calls that we need this hardware. These System calls are available in C-Language.
	A standard library uses in linux for that calls is called GNUC-LIBRARY.


GNUC-LIBRARY:-    I think this library similar like #include<stdio.h>
	~This library contains multiple functions like print(), write() and many more permission methods like chMode(),pseudoCommand() etc.
	Through all these functions , we accesses Kernal Space from UserSpace.

6)File System
	~Linux organizes files using a hierarchical system.
	~Files are stored in directories and these directories can also contain other directories.
	~When you compare the Linux file-system to windows, you will find that there are no drive letters in Linux.

Commands part 1:
1) / -> Root command of linux. All files/directories are stored under this root command.
2) ls -> This command means that to see all content of current(specified address) directory( / ).
3) cd home/ -> change directory from current directory to home directory.
4) ~ -> tilde sign means that comes to the home page of this user.
5) clear -> will clear terminal screen.
6) cd .. => Uses for to moving 1 step back
7) cd . => uses for exiting from current folder.

Note:-
	~we can't go to from current directory to that directory that is not nested of this current directory.

8) mkdir directoryName -> make directory/folder command means that this will create new directory/folder in this current directory/folder.
9) touch app.txt -> This will create app.txt file in this current directoy.
10) vi app.txt -> this command will Add or Edit this file            					//Important and deep Concept!
	~ i -> insert mode turn on using "i" command.
	~pressing esc button -> we press this button to move out from insert mode.    //Confusion cleared
	~pressing shift + colon -> we press this to save our file
	~w and q -> press w for write and then q for quit to quit from editor mode.   //Confusion cleared
11) cat app.txt-> this command print the all content in current file app.txt

note:- 
terminal support this vi editor to ADD or EDITS files.
After getting into editor we should need to switch to different modes like insert mode using i command.

Commands part 2:
12) cp app.txt /Desktop/cloud-native/ -> This command will create a copy of app.txt file in cloud-native directory/folder from current directory/folder.
13) mv app.txt /home/daniyal/Desktop/ -> This command will move app.txt file in Desktop directory/folder from current directory/folder.
14) rm app.txt -> This command will remove app.txt from current directory/folder.
15) man ls -> this command will provide the detail of specific(ls command).                  			//Important command
16) find /home/daniyal/Desktop/cloud-native-2/cli/ "app.txt*" -> This command will search our directory/folder or file.(* means how many files exist here with this name and search that files).
17) find /home/daniyal/Desktop/cloud-native-2/cli/ -name "app.txt" ->If app.txt exists in this directory then This command will return the path of that file. otherwise return nothing.
18) cd . => uses for exiting from current folder.
19) pwd => this command will show current path of the directory.


7)UBUNTU Installation Guide

Linux Flavours:-
	~Suci, fedora, genome, kaali and Ubuntu.
Ubuntu is easy to install, easy to use and update & support is much faster.

20) apt-get(attribute of apt) install <package-name> => this command will install the specified software through CMD.

note:- 
	linux is basically a multiuser Environment means that we can create multile users.
	we can remove "Permission denied" error by login through root user.

How we can access root user from normal user?

User Roles:-
	Two user roles:
		1)Normal User
			Any normal user can create, read and edit file.Normal user can't perform system changes or can't install dependencies.
			
		2)Super User
			Super user can create, read and edit any file and also make system changes without any permission error.

21) sudo su => by using this command will will login into our root user.

Note:-
	Again and Again login into root user for installation of any software is bad practice.

22) sudo => sudo command gains all root security privileges from Root user for Normal user.

23) sudo apt-get install python => This command will install python without any permission error.

Some ShortCut Keys
	~These are uses for our development fast.

Note:-
	1)sudo apt-get install python => For example,when we write g and press tab this will automatically complete the command.
	2) apt double press tab => This command uses for checking out all possibilities of apt. 
	3) ctrl + e => by using this command We can move our cursor to the last of our current command.
	4) arrow up =>we can see our last command



Files Directory and Editor:-
NOTE:-
	~All files on the linux OS are case sensitive.
	~Linux OS doesn't use file extention to determine the file type.

24) touch myFile.txt => this command will create a new file in Current directory.

	vi editor :-
		~this is default editor of Linux.

25) vi myFile.txt => this command will open the vi editor for editing files.
	i -> By pressing i , we moves into insert mode.Then we can write in this file.
	Esc -> By pressing Esc key,we moves out from insert mode to save the file.
	shift + ; -> By pressing this command, we saves our current working file.
	:wq -> By this (write and quit) command , we quit from editor mode.If we quited successfuly, It means data edited successfuly.
	cat myFile.txt -> This command prints all data in that file.

26) mkdir cnc-practice => This command will create a new directory/folder.


Scripting:-

27)Script writing flow
	1) touch simple.sh
	2) vi simple.sh
	3) press i or a
	4) start writing your script here like this
		#!/bin/bash
		echo my first name is : $1        //1 is serves as parameter and script is serves as function like any programming function script that can be uses later.
		echo my last name is : $2
	5) press Esc key to moving out from inserting mode.  or shift 
	6) press shift ; command to saving our script.
	7) press :wq to quit from our insert mode.
	8) ./simple.sh daniyal nagori => by using this command, we enters into this command and pass parameters and then press enter to result.
		~There will be 1 error of permission denied.

	3 permissions:-
		~ There are three permissions of files are as follow:
			1)read
			2)write
			3)executable

	Note: Normal user just have read write permissions and no have any other permisisons like system changes etc.

File permissions:-
	We gives permission to our files through some numeric values that are as follows: 
		0 no permission
		1 executable permission
		2 write permisson
		4 read permission

	9)ls -l => This command is uses for checking out permissions in current directorie's  directory and files(simple.sh) permission.
		~permissions looks like -rw-rw-r-- 1
		Three classes here:-
			1)-rw => File owner permissions
			2)-rw => Group permissions
			3)-r  => Other user's permissions

	Note:- 
	 	//Below command is very important so far

	10)chmode => By using this command,we can give and take permission to any file.

	
		7 = 1 (executable permission) + 2(write permission) + 4(read permission)
	11) chmode 777 simple.sh => 1st 7 gives all permissions to 1st class, 2nd 7 to second class and 3rd 7 to 3rd class.
	
	Conclusion Command:-

	12) ./simple.sh daniyal nagori => by using this command, we enters into this command and pass parameters and then press enter to result.
		Result:-
		~my first name is: daniyal
		~my last name is: nagori
	this above commands working perfectly fine because all permissions have been given to this file.
	13) chmode 477 simple.sh => 1st 4 gives read permission to 1st class, 2nd 7 gives all permissions to second class and 3rd 7 gives all permissions to 3rd class.
	
	Note:-
		4 permissions means that we give just read only permission.

General Commands:-

28) uptime => Uses for checking out from how much time my system is running.
29) uname => uses for checking out the name of operating system	
30) uname -srv => uses for checking out the name,release and version of operating system
31) man command-name(ls) => This command uses for seeing detail of specified command.
32) cd ~ => Moves our control to the root directory/folder.
33) cd .. => this command moves our control to one step back.
34) pwd => this command prints the path of our current working directory.
35) hostname => this command will show the host name of the system.
36) hostname -i => this command will show ip address of our system.
	IP address:
		~a unique string of characters(127.0.1.1) that identifies each computer using the Internet Protocol to communicate over a network.
37) date => will show current date and time.
38) cal => will show calender
39) w => use this command to see which user is online.

Copy Move and Remove:-

40) cp filename path => this command will copy the current file into specified directory.
41) mv filename path =>this command will move the current file into specified directory.
42) rm filename => this command will remove the current file.

Search using command line:-

43) find path -name "directory-name/file-name" => this command will find directory/file-name at specified location.
44) find path -name "linux*" =>  This command will find the "directory/file" that start with linux , it doesn't matter what is behind of linux.

CPU INFORMATION AND HARD DISK SPACE:-

45) uname -a => this command gives detail about operating system information , CPU information like processor name.
46) uname -p => checks processor
47) lscpu => provides all architecture cpu information.
48) cat /proc/cpuinfo => provides CPU information in more detail.
49) df => provides information about used space/ the space that used by mounted devices.
50) df -h => will show information about used space in human readable form.
51) du =>  this command provides the size of used files in current directory.
52) du -s => this command provides the total size of current directory.
53) du -s -h => this command provides the total size of current directory with total size unit (88k , Like K is unit here)

Install Software package manager:-

	what is shell?       //confuion 
	~Shell executes our files and run our states.

54) apt-get install <packge-name> => will install the package
	~ example: apt-get install cpuid
	Result: will be error, we remove error by adding sudo at start.

	~ sudo apt-get install cpuid
		we first need to add password and then package will be installed.

55) sudo apt-remove <package-name> => will remove the package

56) sudo apt-cache search python(few letters of package) => uses for installing the package about which we don't have enough (naming) detail.


Create Custom Commands:-
	~converting long commands to short commands

57) alias myfile="touch myfile.txt" => This command will create custom command named as myfile.
58) unalias myfile => This command will remove the custom command(myfile).

 
USER MANAGEMENT:-
	~How to create users , change password and delete the user?
Note:-
	~File system of linux operating system is executed from root(/).
 

59) sudo useradd Ahmad -m => This command will create the user 👤 named as Ahmad.
60)  sudo passwd Ahmad => By using this command we can give password to user Ahmad.
61) sudo userdel Ahmad -r => This command will delete the user Ahmad.

ESSENTIAL COMMANDS:-
	~These commands are very basic and important!

62) info ls => tells us information about specified command(ls).This command is little rich command and provide more information than "man" command.
63) man ls => just provide detail of specified command(ls), not provide owner information.
64) whatis ls=> provide short description about providing keyword
65) type ls =>  checkout location of specified commands from where they are executes.
66) whereis ls =>  Search executable files.
67) which man=> check files from directories and will return path variable.
68) bg => Display background running processes.
69) free => Checks free and used memory in the system.
70) free -h => Checks free memory(-h means that content will display in human readable form).
71) ps => display running processes (display in that form    PID TTY TIME CMD).
72) kill processId(6775) => Kill specified processes with id 
73) top => provides list of all processes and memory of all processes.
74) reboot => Restart the system
75) shutdown => shutdown the system
76) nice => display low priority programs.



			#Alhamdulillah Tutorial Of Danial Nagori is Completed.


			#Alhamdulillah Notes from FreeCodeCamp Course


Hiding files:-d
77) _filename.extention => file will be hidden.
	~_file.txt => This file will be hidden.
78) ls -a => This command uses for seeing hidden files.
79) mkdir -p => This command will make parent folder in child folder of another parent folder.
80) rmdir direntory-name => This command will remove the specified directory if that directory is empty.
	Note:- 
		For removing directory using rmdir command, that directory should be empty.
81) rmdir -p Linux/ahmad/ => This command will remove whole working tree.
82) rm => remove files or directory.
83) rm -rf (recursive force) Test => This command will force this command to remove.

			copy and move commands:-

84) mv file.txt file2.txt => This file is used to rename file file.txt to file2.txt		 	
85) cp file4.txt ../file3.txt => This command will copy the specified file ( file4.txt ) to previous directory with This name(file3.txt).
86) mv test Test => This command will Rename the directory from test to Test.


			Working with file content

87) head fileName(file.txt) => This command will print the first 10 lines of specified file.
88) tail fileName(file.txt) => This command will print the last 10 lines of specified file.
89) cat => This command concatenates and print(full file content) on the standard output.
	
Very important command !

90) echo The >text1.txt => this command will create file (text1.txt) and add some text (The) into this file.
			Cat Commands
91) cat text1.txt text2.txt text3.txt => This command will the content of all commands in sequence on new lines.
92) cat text1.txt text2.txt text3.txt > all.txt => This command will create all.txt file & copy the content of first three files into all.txt file.
93) cat > file1.txt blinking(Blinking here for writing content) ctrl+d (This command will exit the writing mode and complete the command.) => This command will create file and write some content in this file.
94) cat file1.txt > fileToBeCopied.txt => This command will copy the first file content into another file.
95) more newFile.txt => This file uses for watching page by page content in percentage(In ascending order).
96) less newFile.txt => Opposite to "more" command.

			Linux File Structure
Linux file structure under / (home) command is as follow:

NOTE:-

in / directory run :> ls -l for seeing complete detail of all inside directories.


1) bin 
	~This is where most of our binary files are stored(this means linux terminal commands (pwd, cd , cp and mv) and core utilities . All are stored in this file)
2) boot 
	~Very important directory
	~You don't want to go play an around in this directory
	~This where all the needed files for linux to boot are kept.  //What is boot?
	~Bootfiles which is a small program that allows u to select the operating system and boot the operating system.
3) cdrom
	~This is where our CD derive is stored.
	~Any time when we put a CD Disk into our Linux operating system, It will show under cdrom directory.
4) dev
	~This is where all our physical devices are mounted(located).So all our whole derives , USB, Optical Derives as well as CD derive(cdrom specified for CD derive But it can also store in dev directory depending on distributions) can be stored in this file.
	~Different distributions stored things in different places.\
	~ Sometimes we stored all these files when we have different partitions        //little Confusion.
5) etc 
	~This is where are the configuration files are stored and this is for all the application that are installed on the linux operating system.
	~If we want to install apachi server well that files are stored under the etc directory.
	~Most of the configuration files have extentions .conf
6) home 
	~This is where all the user name folders are stored. So, anytime new user is created on system depended on if there the option is selected or not.
	 and This is where documents, photos, Videos files that all stored under that users home directory which is stored under this home folder.

7) lib
	~he /lib directory contains kernel modules and those shared library images (the C programming code library) needed to boot the system and run the
	 commands in the root filesystem,
	
8) media 
	~The /media directory contains subdirectories where removable media devices inserted into the computer are mounted. For example, when you insert a
	 CD into your Linux system, a directory will automatically be created inside the /media directory. You can access the contents of the CD inside this
	 directory.
9) opt 
	~Traditionally, the /opt directory is used for installing/storing the files of third-party applications that are not available from the distribution’s
	 repository. The normal practice is to keep the software code in opt and then link the binary file in the /bin directory so that all the users can run it.

Very important command

10) proc 
	~ It contains the useful information about the processes that are currently running,
	 it is regarded as control and information centre for kernel.
	 The proc file system also provides communication medium between kernel space and user space.
11) root
	~The /root directory in Linux is the user folder for the system administrator or root user. Like the Windows C:Users folder, it has sub-directories for each user
	 containing all the account's data. Like the Windows C:Users folder, it has sub-directories for each user containing all the account's data.

			video about 2:00:29 hours
12) run 
	~This is where lot of devices are out of mounted when we pluggin USB derives.
	~This is something that realy only relevent to desktop environment.
		
			System Information Commands

1) uptime => Checking out from how much the system is running.
2) free => Checking out free and used memory in the system.
3) ps -A => report a snapshot(Picture(overview)) of the current processes to looking in well way.
	
	System Hard Disk/Hard Derive commands
4) df =>  report file system disk space usage
5) df -h =>  report file system disk space usage to see in human readable form.
6) fdisk => manipulate disk partition table	
	fdisk is a dialog-driven program for creation and manipulation of partition tables. It understands GPT, MBR, Sun, SGI and BSD partition tables.

7)sudo fdisk -l => This command with sudo(sudo uses here for giving permission) uses for seeing all partitions.
8) lsblk => checking out list block devices.
9)top => display Linux processes